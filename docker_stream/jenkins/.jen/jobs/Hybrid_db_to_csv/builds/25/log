Started by user [8mha:////4IGVMtvk6iK1hwW+PI4nElqD5WuZBmgWM1foNK6n5D+9AAAAlx+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAzuEgZu/dLi1CL9ovyMzBIAOOgHy8AAAAA=[0mrohit gupta
Running as SYSTEM
Building in workspace /var/jenkins_home/workspace/Hybrid_db_to_csv
[Hybrid_db_to_csv] $ /bin/sh -xe /tmp/jenkins15763778336086080529.sh
+ pip3 install unidecode
Collecting unidecode
  Downloading Unidecode-1.3.6-py3-none-any.whl (235 kB)
     ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ 235.9/235.9 kB 10.3 MB/s eta 0:00:00
Installing collected packages: unidecode
Successfully installed unidecode-1.3.6
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
+ python3 db_to_csv.py
/var/jenkins_home/workspace/Hybrid_db_to_csv/db_to_csv.py:44: DeprecationWarning: This method will be removed in future versions.  Use 'parser.read_file()' instead.
  config.readfp(open('./tables.properties'))
/var/jenkins_home/workspace/Hybrid_db_to_csv/db_to_csv.py:92: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.
  results = pd.read_sql_query(query, mydb)
/var/jenkins_home/workspace/Hybrid_db_to_csv/db_to_csv.py:92: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.
  results = pd.read_sql_query(query, mydb)
/var/jenkins_home/workspace/Hybrid_db_to_csv/db_to_csv.py:92: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.
  results = pd.read_sql_query(query, mydb)
/var/jenkins_home/workspace/Hybrid_db_to_csv/db_to_csv.py:92: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.
  results = pd.read_sql_query(query, mydb)
/var/jenkins_home/workspace/Hybrid_db_to_csv/db_to_csv.py:92: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.
  results = pd.read_sql_query(query, mydb)
/var/jenkins_home/workspace/Hybrid_db_to_csv/db_to_csv.py:92: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.
  results = pd.read_sql_query(query, mydb)
/var/jenkins_home/workspace/Hybrid_db_to_csv/db_to_csv.py:92: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.
  results = pd.read_sql_query(query, mydb)
/var/jenkins_home/workspace/Hybrid_db_to_csv/db_to_csv.py:92: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.
  results = pd.read_sql_query(query, mydb)
/var/jenkins_home/workspace/Hybrid_db_to_csv/db_to_csv.py:92: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.
  results = pd.read_sql_query(query, mydb)
/var/jenkins_home/workspace/Hybrid_db_to_csv/db_to_csv.py:92: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.
  results = pd.read_sql_query(query, mydb)
/var/jenkins_home/workspace/Hybrid_db_to_csv/db_to_csv.py:92: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.
  results = pd.read_sql_query(query, mydb)
select * from materials_dataset
('hybrid',)
select * from materials_dataset
select * from materials_system
select * from materials_property
select id, method, dataset_id from materials_experimentaldetails
select co.id, co.dataset_id, co.code, co.level_of_theory, co.k_point_grid, co.level_of_relativity, co.basis_set_definition, co.dataset_id, co.numerical_accuracy, co.xc_functional, c.computational_details_id from   materials_computationaldetails co INNER JOIN materials_comment c on co.id = c.computational_details_id where computational_details_id is NOT NULL
select id, title, journal, vol, pages_start, pages_end, year, doi_isbn from materials_reference
select * from materials_author_references
select * from materials_author
select sy.id, sy.starting_materials, sy.product, sy.dataset_id, c.synthesis_method_id  from materials_synthesismethod sy INNER JOIN materials_comment c on sy.id = c.synthesis_method_id where synthesis_method_id is NOT NULL
select o.id, o.subset_id, t.dataset_id, n.id as numerical_id, n.value, n.qualifier, d.primary_property_id, f.value as value_temp, u.label from  materials_datapoint o INNER JOIN materials_subset t on o.subset_id = t.id INNER JOIN materials_numericalvalue n on o.id = n.datapoint_id INNER JOIN materials_dataset d on d.id = t.dataset_id INNER JOIN materials_numericalvaluefixed f on f.subset_id = t.id INNER JOIN  materials_unit u on u.id = f.unit_id where secondary_property_id IS NULL
select o.id, o.subset_id, t.dataset_id, n.id as numerical_id, n.value, n.qualifier, d.primary_property_id, d.secondary_property_id, f.value as value_temp, u.label from   materials_datapoint o INNER JOIN materials_subset t on o.subset_id = t.id INNER JOIN materials_numericalvalue n on o.id = n.datapoint_id INNER JOIN materials_dataset d on d.id = t.dataset_id INNER JOIN materials_numericalvaluefixed f on f.subset_id = t.id INNER JOIN  materials_unit u on u.id = f.unit_id where secondary_property_id IS NOT NULL
Finished: SUCCESS
